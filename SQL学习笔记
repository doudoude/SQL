%load_ext sql
%sql mysql://studentuser:studentpw@mysqlserver/dognitiondb
%sql USE dognitiondb
%sql SHOW tables
%sql DESCRIBE dogs 等价于 SHOW columns FROM (enter table name here)

%%sql
SELECT breed
FROM dogs;

%%sql
SELECT breed            可选多个，以逗号隔开；可用*选全部
FROM dogs LIMIT 5,10;  从第五行起选10行呈现，limit加在最后，分号作为query的结尾

%%sql
SELECT median_iti_minutes/60          用已有列作运算，增加了新的一列
FROM dogs LIMIT 5,8

%%sql
SELECT user_guid
FROM users
WHERE membership_type=2;

%%sql
SELECT *
FROM users
WHERE state IN ("NC","NY");            

%%sql
SELECT dog_guid, created_at
FROM complete_tests
WHERE created_at<'2015-10-15';     日期可按字符串处理

%%sql
SELECT user_guid
FROM users
WHERE state IS NOT NULL;

提取日期中的月份
EXTRACT(MONTH from [fill in column name here, and don’t use the brackets]) 
MAX(CASE WHEN EXTRACT(MONTH from saledate)=12 THEN saledate END) AS last_day_in_Dec 

%%sql
SELECT dog_guid, subcategory_name, test_name
FROM reviews
WHERE YEAR(created_at)=2014  DAYNAME星期 DAY日期MONTH YEAR都可按数值处理  
LIMIT 10;

%%sql
SELECT user_guid, gender, breed
FROM dogs
WHERE gender='female' AND breed LIKE ("%terrier%");     模糊选择LIKE（“”）

%%sql
SELECT start_time AS "examstart time"    改列名。
FROM exam_answers；                   也能改表名

%%sql
SELECT DISTINCT test_name, subcategory_name 选唯一值
FROM complete_tests；

non_us_countries=%sql SELECT DISTINCT country FROM users WHERE country!='US'；
non_us_countries.csv('non_us_countries.csv')   读取选中部分并转为csv可保存到本地

%%sql
SELECT DISTINCT breed,                注意这个逗号要有
REPLACE(breed,'-','') AS breed_fixed           函数replace用法，查看所有函数：http://www.w3resource.com/mysql/mysql-functions-and-operators.php
FROM dogs
ORDER BY breed_fixed;
  

Exercise4
%%sql                 count函数
SELECT COUNT(DISTINCT dog_guid)     COUNT(*)可对所有行进行计数
FROM dogs
WHERE exclude=1

%%sql                       计数空值
SELECT SUM(ISNULL(exclude))
FROM dogs

%%sql                                      描述性函数
SELECT test_name,
AVG(rating) AS AVG_RATING,
MIN(rating) AS MIN_RATING,
MAX(rating) AS MAX_RATING
FROM reviews
WHERE test_name='Memory versus Pointing';

%%sql             直接计算就直接select函数。 timestampdiff(单位，起，止)为计时函数
SELECT AVG(TIMESTAMPDIFF(MINUTE,start_time,end_time)) AS AVE_TIME
FROM exam_answers;

%%sql              函数和条件混合
SELECT AVG(TIMESTAMPdiff(MINUTE,start_time,end_time))
FROM exam_answers
WHERE TIMESTAMPdiff(MINUTE,start_time,end_time)>0;

EXERCISE 5
SELECT gender, breed_group, COUNT(DISTINCT dog_guid) AS Num_Dogs
FROM dogs
WHERE breed_group IS NOT NULL AND breed_group!="None" AND breed_group!=""
GROUP BY 1, 2           也可以直接用名称，gender
HAVING Num_Dogs >= 1000        where针对某行某列，having针对一组数据
ORDER BY 3 DESC

SELECT state, zip, COUNT(DISTINCT user_guid) AS NUM_Users
FROM users
WHERE Country="US"             记得加引号
GROUP BY State, zip
HAVING NUM_Users>=5
ORDER BY State ASC, NUM_Users DESC;
 


Exercise 7 join
 
INNER JOIN 不包含空
Left join包含left中的空
Full outer join包含两个表中的空（sql不支持full out join，它用的很少）

1.	Inner join  通过where 实现
SELECT d.dog_guid AS DogID, d.user_guid AS UserID, AVG(r.rating) AS AvgRating, 
       COUNT(r.rating) AS NumRatings, d.breed, d.breed_group, d.breed_type
两个表要写清table.dog_guid，否则sql不知道是哪个表里的
FROM dogs d, reviews r     把table改名简写
WHERE d.dog_guid=r.dog_guid AND d.user_guid=r.user_guid   告诉sql怎样结合表
GROUP BY DogID, UserID, d.breed, d.breed_group, d.breed_type
HAVING NumRatings >= 10
ORDER BY AvgRating DESC
LIMIT 200

%%sql
SELECT COUNT(DISTINCT u.user_guid)
FROM users u,reviews r
WHERE u.user_guid=r.user_guid AND r.rating IS NOT NULL      IS NOT NULL：不为空
GROUP BY membership_type
ORDER BY 1 DESC

EXERCISE 8 OUTER JOIN (left/right)
SELECT r.dog_guid, d.dog_guid, r.user_guid, d.user_guid, AVG(r.rating) AS AvgRating, COUNT(r.rating) AS NumRatings
FROM reviews r LEFT JOIN dogs d
  ON r.dog_guid=d.dog_guid AND r.user_guid=d.user_guid
WHERE d.dog_guid IS NULL
GROUP BY r.dog_guid
HAVING NumRatings >= 10
ORDER BY AvgRating DESC;
查找在user不在dog中的user id: LEFT join 之后，d.user_guid IS NULL
%%sql
SELECT COUNT(DISTINCT u.user_guid)
FROM users u LEFT JOIN dogs d
ON u.user_guid=d.user_guid
WHERE d.user_guid IS NULL;

Exercise 9
1.	Subquery: query 里面包含	query
%%sql
SELECT *
FROM exam_answers 
WHERE TIMESTAMPDIFF(minute,start_time,end_time)>
(SELECT AVG(TIMESTAMPDIFF(minute,start_time,end_time)) FROM exam_answers WHERE test_name='Yawn Warm-Up' AND TIMESTAMPDIFF(minute,start_time,end_time)>0)
2.	IN     NOT IN	用法：
SELECT COUNT(DISTINCT dog_guid) FROM dogs WHERE breed_group NOT IN ('Working','Sporting','Herding')

EXISTS / NOT EXISTS
与2. 一样用于选择，但只用于sub query
SELECT COUNT(DISTINCT user_guid )
FROM users u
WHERE NOT EXISTS (SELECT* FROM dogs d WHERE d.user_guid=u.user_guid)

在子集中选择：
%%sql
SELECT DistinctUUsersID.user_guid AS uUserID, DistictDUsersID.user_guid AS dUserID, DistictDUsersID.dog_guid AS DogID, DistictDUsersID.breed AS breed
FROM (SELECT DISTINCT u.user_guid FROM users u LIMIT 100) AS DistinctUUsersID
LEFT JOIN (SELECT DISTINCT d.user_guid, d.dog_guid, d.breed
FROM dogs d) AS DistictDUsersID
ON DistinctUUsersID.user_guid=DistictDUsersID.user_guid
GROUP BY DistinctUUsersID.user_guid;

MAX(CASE WHEN EXTRACT(MONTH from saledate)=12
 THEN saledate
 END) AS last_day_in_Dec 
